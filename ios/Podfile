platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks! :linkage => :static  # Use static linking
  use_modular_headers!

  # Force these specific versions and ordering for compatibility
  pod 'PromisesObjC'
  pod 'PromisesSwift'
  pod 'FirebaseCore'
  
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Fix for the -G flag issue in abseil, gRPC, etc.
    if ['abseil', 'gRPC-Core', 'gRPC-C++', 'BoringSSL-GRPC', 'leveldb-library'].include?(target.name)
      target.build_configurations.each do |config|
        # Remove problematic compiler flags
        if config.build_settings['OTHER_CFLAGS']
          config.build_settings['OTHER_CFLAGS'] = config.build_settings['OTHER_CFLAGS'].reject { |f| f == '-G' }
        end
        if config.build_settings['OTHER_CPLUSPLUSFLAGS']
          config.build_settings['OTHER_CPLUSPLUSFLAGS'] = config.build_settings['OTHER_CPLUSPLUSFLAGS'].reject { |f| f == '-G' }
        end
        
        # Set specific optimization flags
        config.build_settings['COMPILER_INDEX_STORE_ENABLE'] = 'NO'
        config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '0'
      end
    end

    # Fix sign_in_with_apple issues
    if target.name == 'sign_in_with_apple'
      target.build_configurations.each do |config|
        # Ensure Flutter.h can be found
        config.build_settings['HEADER_SEARCH_PATHS'] ||= []
        config.build_settings['HEADER_SEARCH_PATHS'] << "${PODS_ROOT}/../../Flutter"
        config.build_settings['HEADER_SEARCH_PATHS'] << "${PODS_CONFIGURATION_BUILD_DIR}/Flutter"
        
        # Fix umbrella headers and module issues
        config.build_settings['DEFINES_MODULE'] = 'YES'
        config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
        
        # Additional settings to ensure proper module building
        config.build_settings['SWIFT_INCLUDE_PATHS'] ||= []
        config.build_settings['SWIFT_INCLUDE_PATHS'] << "${PODS_CONFIGURATION_BUILD_DIR}/Flutter"
      end
    end

    # Apply universal fixes to all targets
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      config.build_settings['DEFINES_MODULE'] = 'YES'
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      
      # Fix for M1 Macs
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      
      # Add header search paths
      config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(PODS_ROOT)/Firebase/CoreOnly/Sources']
      config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/Firebase/CoreOnly/Sources'
      config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/../Flutter'
    end
    
    # Promise libraries specific configuration
    if ['PromisesObjC', 'PromisesSwift'].include?(target.name)
      target.build_configurations.each do |config|
        config.build_settings['DEFINES_MODULE'] = 'YES'
        config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
        config.build_settings['CLANG_ENABLE_MODULE_DEBUGGING'] = 'NO'
        config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'YES'
      end
    end

    target.build_configurations.each do |config|
      config.build_settings['DEFINES_MODULE'] = 'YES'
      config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
      config.build_settings['HEADER_SEARCH_PATHS'] ||= []
      config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/../../Flutter'
      config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/../../Flutter/Headers'
    end
  end

  # Fix script phases
  installer.pods_project.build_configurations.each do |config|
    config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
  end
end